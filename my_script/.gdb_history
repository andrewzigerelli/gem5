r
ls
pwd
cd my_script/
r
l
del 1
c
l
p req
frame
frame 1
p req
p req.get()
frame 0
p _requests[numTranslatedFragments]
p _requests[numTranslatedFragments].get()
c
c
del 2
c
restart 1
restart 0
info checkpoints 
r
l
bt
bt 10
bt 20
frame 15
l
p inst
frame 14
frame 13
frame 12
frame 11
frame 10
l
p this
frame 9
l
p inst
p data
p addr
p/x addr
p res
l
frame 9
l
frame 8
p res
frame 7
l
p _requests
p _requests.get()
p _requests
p _requests.size()
p sendFragmentToTranslation
p i
l
frame 5
frame 4
frame 8
frame 7
frame 8
frame 7
frame 8
frame 9
p res
frame 10
frame 11
p addr
p res
frame 8
frame 7
l
l
l 900
p 890
l 890
l
p 880
l 880
l 860
l
frame
l
l
frame
l
frame 8
l
p req
frame 9
l
frame 8
l
p needs_burst 
frame 0
frame 3
l
frame 4
l
frame 7
frame 8
p req
l
l
l 702
l
p amo_op
p req
b if req=0x1ef72b60
r
l
p req
c
l
info breakpoints 
c
r
info breakpoints 
c
c
c
r
del breakpoints 
c
break lsq_impl.hh:703
c
b if req=0x1ef72b60
del 4
c
p req
p req
info breakpoints 
p *req
p req
p needs_burst 
p req
b 715
del 4
del 5
c
p req
x/req
x/w req
p req
b if req=0x1ef72b60
del 6
r
p
info
info breakpoints 
p req
b if req==0x1ef72b60
del 7
r
quit
b lsq_impl.hh:718
r
l
p req
p *req
p needs_burst
s
l
l
n
n
l
n
c
p
l
s
l
l
c
c
c
c
c
c
del 1
c
exit
quit
r
r
c
'
=bt
bt
l
bt 5
bt 7
bt 9
frame
bt 
b 919
frame 10
frame 1
frame 121
frame 11
frame 12
watch req
reverse-cont
l
bt
bt 1
bt 10-20
bt 20
b 10
del 2
del 1
c
l
l
frame 10
frame 11
l
frame 12
watch _requests
reverse-cont
reverse-cont
r
exit
quit
r
k

bt
bt
frame
bt
l
bt
bt
frame
r
quit
quit
r
bt
frame 4
l
p req
p *req
quit
quit
r
quit
info args
r
quit
